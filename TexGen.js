var TG={OP:{SET:function(t,r){return r},ADD:function(t,r){return t+r},SUB:function(t,r){return t-r},MUL:function(t,r){return t*r},DIV:function(t,r){return t/r},AND:function(t,r){return t&r},XOR:function(t,r){return t^r},MIN:function(t,r){return Math.min(t,r)},MAX:function(t,r){return Math.max(t,r)}},Texture:function(t,r){this.color=new Float32Array(4),this.buffer=new TG.Buffer(t,r),this.bufferCopy=new TG.Buffer(t,r)}};TG.Texture.prototype={constructor:TG.Texture,set:function(t,r){void 0===r&&(r=TG.OP.SET),this.bufferCopy.copy(this.buffer);var e=["var x = 0, y = 0;","var array = dst.array;","var width = dst.width, height = dst.height;","for ( var i = 0, il = array.length; i < il; i += 4 ) {","\t"+t.getSource(),"\tarray[ i     ] = op( array[ i     ], color[ 0 ] * tint[ 0 ] );","\tarray[ i + 1 ] = op( array[ i + 1 ], color[ 1 ] * tint[ 1 ] );","\tarray[ i + 2 ] = op( array[ i + 2 ], color[ 2 ] * tint[ 2 ] );","\tif ( ++x === width ) { x = 0; y ++; }","}"].join("\n");return new Function("op, dst, src, color, params, tint",e)(r,this.buffer,this.bufferCopy,this.color,t.getParams(),t.getTint()),this},add:function(t){return this.set(t,TG.OP.ADD)},sub:function(t){return this.set(t,TG.OP.SUB)},mul:function(t){return this.set(t,TG.OP.MUL)},div:function(t){return this.set(t,TG.OP.DIV)},and:function(t){return this.set(t,TG.OP.AND)},xor:function(t){return this.set(t,TG.OP.XOR)},min:function(t){return this.set(t,TG.OP.MIN)},max:function(t){return this.set(t,TG.OP.MAX)},toImageData:function(t){for(var r=this.buffer,e=r.array,n=t.createImageData(r.width,r.height),a=n.data,o=0,i=e.length;o<i;o+=4)a[o]=255*e[o],a[o+1]=255*e[o+1],a[o+2]=255*e[o+2],a[o+3]=255;return n},toCanvas:function(t){void 0===t&&(t=document.createElement("canvas")),t.width=this.buffer.width,t.height=this.buffer.height;var r=t.getContext("2d"),e=this.toImageData(r);return r.putImageData(e,0,0),t}},TG.Program=function(t){var r=new Float32Array([1,1,1]);return t.tint=function(t,e,n){return r[0]=t,r[1]=e,r[2]=n,this},t.getTint=function(){return r},t},TG.Number=function(){return new TG.Program({getParams:function(){},getSource:function(){return["color[ 0 ] = 1;","color[ 1 ] = 1;","color[ 2 ] = 1;"].join("\n")}})},TG.SinX=function(){var t={frequency:1,offset:0};return new TG.Program({frequency:function(r){return t.frequency=r*Math.PI,this},offset:function(r){return t.offset=r,this},getParams:function(){return t},getSource:function(){return["var value = Math.sin( ( x + params.offset ) * params.frequency );","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.SinY=function(){var t={frequency:1,offset:0};return new TG.Program({frequency:function(r){return t.frequency=r*Math.PI,this},offset:function(r){return t.offset=r,this},getParams:function(){return t},getSource:function(){return["var value = Math.sin( ( y + params.offset ) * params.frequency );","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.OR=function(){return new TG.Program({getParams:function(){},getSource:function(){return["var value = ( x | y ) / width;","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.XOR=function(){return new TG.Program({getParams:function(){},getSource:function(){return["var value = ( x ^ y ) / width;","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.Noise=function(){var t={seed:Date.now()};return new TG.Program({seed:function(r){return t.seed=r,this},getParams:function(){return t},getSource:function(){return["var value = TG.Utils.hashRNG( params.seed, x, y );","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.FractalNoise=function(){var t={interpolator:new TG.ColorInterpolator(TG.ColorInterpolatorMethod.STEP),seed:Date.now(),baseFrequency:.03125,amplitude:.4,persistence:.72,octaves:4,step:4};return new TG.Program({seed:function(r){return t.seed=r,this},baseFrequency:function(r){return t.baseFrequency=1/r,this},amplitude:function(r){return t.amplitude=r,this},persistence:function(r){return t.persistence=r,this},octaves:function(r){return t.octaves=Math.max(1,r),this},step:function(r){return t.step=Math.max(1,r),this},interpolation:function(r){return t.interpolator.setInterpolation(r),this},getParams:function(){return t},getSource:function(){return["var value = 0;","var amp = params.amplitude;","var freq = params.baseFrequency;","var x1, y1, dx, dy;","var v1, v2, v3, v4;","var i1, i2;","for ( var j = 1; j <= params.octaves; j++ ) {","x1 = Math.floor( x * freq ), y1 = Math.floor( y * freq );","if ( params.interpolator.interpolation == TG.ColorInterpolatorMethod.STEP ) {","value += TG.Utils.hashRNG( params.seed * j, x1, y1 ) * amp;","} else {","dx = ( x * freq ) - x1, dy = ( y * freq ) - y1;","v1 = TG.Utils.hashRNG( params.seed * j, x1    , y1     );","v2 = TG.Utils.hashRNG( params.seed * j, x1 + 1, y1     );","v3 = TG.Utils.hashRNG( params.seed * j, x1    , y1 + 1 );","v4 = TG.Utils.hashRNG( params.seed * j, x1 + 1, y1 + 1 );","params.interpolator.set( [","{ pos: 0, color: [ v1 ] },","{ pos: 1, color: [ v2 ] }","] );","i1 = params.interpolator.getColorAt( dx );","params.interpolator.set( [","{ pos: 0, color: [ v3 ] },","{ pos: 1, color: [ v4 ] }","] );","i2 = params.interpolator.getColorAt( dx );","params.interpolator.set( [","{ pos: 0, color: [ i1[ 0 ] ] },","{ pos: 1, color: [ i2[ 0 ] ] }","] );","value += params.interpolator.getColorAt( dy )[ 0 ] * amp;","}","freq *= params.step;","amp *= params.persistence;","}","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.CellularNoise=function(){var t={seed:Date.now(),density:32,weightRange:0};return new TG.Program({seed:function(r){return t.seed=r,this},density:function(r){return t.density=r,this},weightRange:function(r){return t.weightRange=Math.max(0,r),this},getParams:function(){return t},getSource:function(){return["var p = TG.Utils.cellNoiseBase( x, y, params.seed, params.density, params.weightRange );","var value = 1 - ( p.dist / params.density );","if ( params.density < 0 ) value -= 1;","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.VoronoiNoise=function(){var t={seed:Date.now(),density:32,weightRange:0};return new TG.Program({seed:function(r){return t.seed=r,this},density:function(r){return t.density=r,this},weightRange:function(r){return t.weightRange=Math.max(0,r),this},getParams:function(){return t},getSource:function(){return["var p = TG.Utils.cellNoiseBase( x, y, params.seed, params.density, params.weightRange );","color[ 0 ] = p.value;","color[ 1 ] = p.value;","color[ 2 ] = p.value;"].join("\n")}})},TG.CellularFractal=function(){var t={seed:Date.now(),weightRange:0,baseDensity:64,amplitude:.7,persistence:.45,octaves:4,step:2};return new TG.Program({seed:function(r){return t.seed=r,this},baseDensity:function(r){return t.baseDensity=r,this},weightRange:function(r){return t.weightRange=Math.max(0,r),this},amplitude:function(r){return t.amplitude=r,this},persistence:function(r){return t.persistence=r,this},octaves:function(r){return t.octaves=Math.max(1,r),this},step:function(r){return t.step=Math.max(1,r),this},getParams:function(){return t},getSource:function(){return["var p;","var value = 0;","var amp = params.amplitude;","var dens = params.baseDensity;","for ( var j = 1; j <= params.octaves; j++ ) {","p = TG.Utils.cellNoiseBase( x, y, params.seed * j, dens, params.weightRange );","p.dist = 1 - ( p.dist / dens );","if ( dens < 0 ) p.dist -= 1;","value += p.dist * amp;","dens /= params.step;","amp *= params.persistence;","}","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.VoronoiFractal=function(){var t={seed:Date.now(),weightRange:0,baseDensity:64,amplitude:.6,persistence:.6,octaves:4,step:2};return new TG.Program({seed:function(r){return t.seed=r,this},baseDensity:function(r){return t.baseDensity=r,this},weightRange:function(r){return t.weightRange=Math.max(0,r),this},amplitude:function(r){return t.amplitude=r,this},persistence:function(r){return t.persistence=r,this},octaves:function(r){return t.octaves=Math.max(1,r),this},step:function(r){return t.step=Math.max(1,r),this},getParams:function(){return t},getSource:function(){return["var p;","var value = 0;","var amp = params.amplitude;","var dens = params.baseDensity;","for ( var j = 1; j <= params.octaves; j++ ) {","p = TG.Utils.cellNoiseBase( x, y, params.seed * j, dens, params.weightRange );","value += p.value * amp;","dens /= params.step;","amp *= params.persistence;","}","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.CheckerBoard=function(){var t={size:[32,32],offset:[0,0],rowShift:0};return new TG.Program({size:function(r,e){return t.size=[r,e],this},offset:function(r,e){return t.offset=[r,e],this},rowShift:function(r){return t.rowShift=r,this},getParams:function(){return t},getSource:function(){return["var value = ( ( ( y + params.offset[ 1 ] ) / params.size[ 1 ] ) & 1 ) ^ ( ( ( x + params.offset[ 0 ] + parseInt( y / params.size[ 1 ] ) * params.rowShift ) / params.size[ 0 ] ) & 1 ) ? 0 : 1","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.Rect=function(){var t={position:[0,0],size:[32,32]};return new TG.Program({position:function(r,e){return t.position=[r,e],this},size:function(r,e){return t.size=[r,e],this},getParams:function(){return t},getSource:function(){return["var value = ( x >= params.position[ 0 ] && x <= ( params.position[ 0 ] + params.size[ 0 ] ) && y <= ( params.position[ 1 ] + params.size[ 1 ] ) && y >= params.position[ 1 ] ) ? 1 : 0;","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.Circle=function(){var t={position:[0,0],radius:50,delta:1};return new TG.Program({delta:function(r){return t.delta=r,this},position:function(r,e){return t.position=[r,e],this},radius:function(r){return t.radius=r,this},getParams:function(){return t},getSource:function(){return["var dist = TG.Utils.distance( x, y, params.position[ 0 ], params.position[ 1 ] );","var value = 1 - TG.Utils.smoothStep( params.radius - params.delta, params.radius, dist );","color[ 0 ] = value;","color[ 1 ] = value;","color[ 2 ] = value;"].join("\n")}})},TG.PutTexture=function(t){var r={offset:[0,0],repeat:!1,srcTex:t.buffer};return new TG.Program({offset:function(t,e){return r.offset=[t,e],this},repeat:function(t){return r.repeat=t,this},getParams:function(){return r},getSource:function(){return["var texWidth = params.srcTex.width;","var texHeight = params.srcTex.height;","var texX = Math.floor( x - params.offset[ 0 ] );","var texY = Math.floor( y - params.offset[ 1 ] );","if ( texX >= texWidth || texY >= texHeight || texX < 0 || texY < 0 ) {","if ( params.repeat ) {","var nx, ny;","var rangeX = texWidth - 1;","var rangeY = texHeight - 1;","if ( params.repeat == 1 ) {","nx = TG.Utils.wrap( texX, 0, texWidth );","ny = TG.Utils.wrap( texY, 0, texHeight );","} else if ( params.repeat == 2 ) {","nx = TG.Utils.mirroredWrap( texX, 0, rangeX );","ny = TG.Utils.mirroredWrap( texY, 0, rangeY );","} else if ( params.repeat == 3 ) {","nx = TG.Utils.clamp( texX, 0, rangeX );","ny = TG.Utils.clamp( texY, 0, rangeY );","}","color = params.srcTex.getPixelNearest( nx, ny );","} else {","color[ 0 ] = 0;","color[ 1 ] = 0;","color[ 2 ] = 0;","}","} else color = params.srcTex.getPixelNearest( texX, texY );"].join("\n")}})},TG.SineDistort=function(){var t={sines:[4,4],offset:[0,0],amplitude:[16,16]};return new TG.Program({sines:function(r,e){return t.sines=[r,e],this},offset:function(r,e){return t.offset=[r,e],this},amplitude:function(r,e){return t.amplitude=[r,e],this},getParams:function(){return t},getSource:function(){return["var s = Math.sin( params.sines[ 0 ] / 100 * y + params.offset[ 0 ] ) * params.amplitude[ 0 ] + x;","var t = Math.sin( params.sines[ 1 ] / 100 * x + params.offset[ 1 ] ) * params.amplitude[ 1 ] + y;","color.set( src.getPixelBilinear( s, t ) );"].join("\n")}})},TG.Twirl=function(){var t={strength:0,radius:120,position:[128,128]};return new TG.Program({strength:function(r){return t.strength=r/100,this},radius:function(r){return t.radius=r,this},position:function(r,e){return t.position=[r,e],this},getParams:function(){return t},getSource:function(){return["var dist = TG.Utils.distance( x, y, params.position[ 0 ], params.position[ 1 ] );","if (dist < params.radius) {","dist = Math.pow(params.radius - dist, 2) / params.radius;","var angle = 2.0 * Math.PI * (dist / (params.radius / params.strength));","var s = (((x - params.position[ 0 ]) * Math.cos(angle)) - ((y - params.position[ 0 ]) * Math.sin(angle)) + params.position[ 0 ] + 0.5);","var t = (((y - params.position[ 1 ]) * Math.cos(angle)) + ((x - params.position[ 1 ]) * Math.sin(angle)) + params.position[ 1 ] + 0.5);","} else {","var s = x;","var t = y;","}","color.set( src.getPixelBilinear( s, t ) );"].join("\n")}})},TG.Transform=function(){var t={offset:[0,0],angle:0,scale:[1,1]};return new TG.Program({offset:function(r,e){return t.offset=[r,e],this},angle:function(r){return t.angle=TG.Utils.deg2rad(r),this},scale:function(r,e){if(0!==r&&0!==e)return t.scale=[r,e],this},getParams:function(){return t},getSource:function(){return["var x2 = x - width / 2;","var y2 = y - height / 2;","var s = x2 * ( Math.cos( params.angle ) / params.scale[ 0 ] ) + y2 * -( Math.sin( params.angle ) / params.scale[ 0 ] );","var t = x2 * ( Math.sin( params.angle ) / params.scale[ 1 ] ) + y2 *  ( Math.cos( params.angle ) / params.scale[ 1 ] );","s += params.offset[ 0 ] + width / 2;","t += params.offset[ 1 ] + height / 2;","color.set( src.getPixelBilinear( s, t ) );"].join("\n")}})},TG.Pixelate=function(){var t={size:[1,1]};return new TG.Program({size:function(r,e){return t.size=[r,e],this},getParams:function(){return t},getSource:function(){return["var s = params.size[ 0 ] * Math.floor(x/params.size[ 0 ]);","var t = params.size[ 1 ] * Math.floor(y/params.size[ 1 ]);","color.set( src.getPixelNearest( s, t ) );"].join("\n")}})},TG.GradientMap=function(){var t={gradient:new TG.ColorInterpolator(TG.ColorInterpolatorMethod.LINEAR)};return new TG.Program({repeat:function(r){return t.gradient.setRepeat(r),this},interpolation:function(r){return t.gradient.setInterpolation(r),this},point:function(r,e){return t.gradient.addPoint(r,e),this},getParams:function(){return t},getSource:function(){return["var v = src.getPixelNearest( x, y );","var r = params.gradient.getColorAt( v[ 0 ] )[ 0 ];","var g = params.gradient.getColorAt( v[ 1 ] )[ 1 ];","var b = params.gradient.getColorAt( v[ 2 ] )[ 2 ];","color[ 0 ] = r;","color[ 1 ] = g;","color[ 2 ] = b;"].join("\n")}})},TG.Normalize=function(){var t={multiplier:0,offset:0};return new TG.Program({getParams:function(){return t},getSource:function(){return["if ( !params.init ) {","var high = -Infinity;","var low = Infinity;","for ( var j = 0, len = src.array.length; j < len; j++ ) {","if ( j % 4 == 3 ) continue;","high = ( src.array[ j ] > high ) ? src.array[ j ] : high;","low  = ( src.array[ j ] < low  ) ? src.array[ j ] : low;","}","params.offset = -low;","params.multiplier = 1 / ( high - low );","params.init = true;","}","var v = src.getPixelNearest( x, y );","color[ 0 ] = ( v[ 0 ] + params.offset ) * params.multiplier;","color[ 1 ] = ( v[ 1 ] + params.offset ) * params.multiplier;","color[ 2 ] = ( v[ 2 ] + params.offset ) * params.multiplier;"].join("\n")}})},TG.Posterize=function(){var t={step:2};return new TG.Program({step:function(r){return t.step=Math.max(r,2),this},getParams:function(){return t},getSource:function(){return["var v = src.getPixelNearest( x, y );","color[ 0 ] = Math.floor( Math.floor( v[ 0 ] * 255 / ( 255 / params.step ) ) * 255 / ( params.step - 1 ) ) / 255;","color[ 1 ] = Math.floor( Math.floor( v[ 1 ] * 255 / ( 255 / params.step ) ) * 255 / ( params.step - 1 ) ) / 255;","color[ 2 ] = Math.floor( Math.floor( v[ 2 ] * 255 / ( 255 / params.step ) ) * 255 / ( params.step - 1 ) ) / 255;"].join("\n")}})},TG.Buffer=function(t,r){this.width=t,this.height=r,this.array=new Float32Array(t*r*4),this.color=new Float32Array(4)},TG.Buffer.prototype={constructor:TG.Buffer,copy:function(t){this.array.set(t.array)},getPixelNearest:function(t,r){r>=this.height&&(r-=this.height),r<0&&(r+=this.height),t>=this.width&&(t-=this.width),t<0&&(t+=this.width);var e=this.array,n=this.color,a=Math.round(r)*this.width*4+4*Math.round(t);return n[0]=e[a],n[1]=e[a+1],n[2]=e[a+2],this.color},getPixelBilinear:function(t,r){var e=Math.floor(t),n=Math.floor(r),a=e+n*this.width,o=this.array,i=this.color,s=t-e,u=r-n,c=1-s,l=1-u,p=c*l,h=s*l,f=c*u,m=s*u,g=4*a,v=4*(1+a),d=4*(1*this.width+a),T=4*(1+1*this.width+a),G=this.width*this.height*4;return g>=G&&(g-=G),g<0&&(g+=G),v>=G&&(v-=G),v<0&&(v+=G),d>=G&&(d-=G),d<0&&(d+=G),T>=G&&(T-=G),T<0&&(T+=G),i[0]=o[g+0]*p+o[v+0]*h+o[d+0]*f+o[T+0]*m,i[1]=o[g+1]*p+o[v+1]*h+o[d+1]*f+o[T+1]*m,i[2]=o[g+2]*p+o[v+2]*h+o[d+2]*f+o[T+2]*m,i[3]=o[g+3]*p+o[v+3]*h+o[d+3]*f+o[T+3]*m,this.color},getPixelOffset:function(t){var r=this.array,e=this.color;return t=parseInt(4*t),e[0]=r[t],e[1]=r[t+1],e[2]=r[t+2],e[3]=r[t+3],this.color}},TG.ColorInterpolatorMethod={STEP:0,LINEAR:1,SPLINE:2},TG.ColorInterpolator=function(t){return this.points=[],this.low=0,this.high=0,this.interpolation=void 0===t?TG.ColorInterpolatorMethod.LINEAR:t,this.repeat=!1,this},TG.ColorInterpolator.prototype={set:function(t){return this.points=t,this.points.sort((function(t,r){return t.pos-r.pos})),this.low=this.points[0].pos,this.high=this.points[this.points.length-1].pos,this},addPoint:function(t,r){return this.points.push({pos:t,color:r}),this.points.sort((function(t,r){return t.pos-r.pos})),this.low=this.points[0].pos,this.high=this.points[this.points.length-1].pos,this},setRepeat:function(t){return this.repeat=t,this},setInterpolation:function(t){return this.interpolation=t,this},getColorAt:function(t){t=2==this.repeat?TG.Utils.mirroredWrap(t,this.low,this.high):this.repeat?TG.Utils.wrap(t,this.low,this.high):TG.Utils.clamp(t,this.low,this.high);for(var r=0,e=this.points;e[r+1].pos<t;)r++;var n=e[r],a=e[r+1],o=(t-n.pos)/(a.pos-n.pos);if(this.interpolation==TG.ColorInterpolatorMethod.STEP)return n.color;if(this.interpolation==TG.ColorInterpolatorMethod.LINEAR)return TG.Utils.mixColors(n.color,a.color,o);if(this.interpolation==TG.ColorInterpolatorMethod.SPLINE){var i=o*o,s=i*o;return[(2*n.color[0]-2*a.color[0])*s+(-3*n.color[0]+3*a.color[0])*i+n.color[0],(2*n.color[1]-2*a.color[1])*s+(-3*n.color[1]+3*a.color[1])*i+n.color[1],(2*n.color[2]-2*a.color[2])*s+(-3*n.color[2]+3*a.color[2])*i+n.color[2]]}}},TG.RadialGradient=function(){var t={gradient:new TG.ColorInterpolator(TG.ColorInterpolatorMethod.LINEAR),radius:255,center:[128,128]};return new TG.Program({repeat:function(r){return t.gradient.setRepeat(r),this},radius:function(r){return t.radius=r,this},interpolation:function(r){return t.gradient.setInterpolation(r),this},center:function(r,e){return t.center=[r,e],this},getParams:function(){return t},point:function(r,e){return t.gradient.addPoint(r,e),this},getSource:function(){return["var dist = TG.Utils.distance( x, y, params.center[ 0 ], params.center[ 1 ] );","color = params.gradient.getColorAt( dist / params.radius );"].join("\n")}})},TG.LinearGradient=function(){var t={gradient:new TG.ColorInterpolator(TG.ColorInterpolatorMethod.LINEAR)};return new TG.Program({repeat:function(r){return t.gradient.setRepeat(r),this},interpolation:function(r){return t.gradient.setInterpolation(r),this},getParams:function(){return t},point:function(r,e){return t.gradient.addPoint(r,e),this},getSource:function(){return["color = params.gradient.getColorAt( x / width );"].join("\n")}})},TG.Utils={smoothStep:function(t,r,e){return(e=TG.Utils.clamp((e-t)/(r-t),0,1))*e*(3-2*e)},mixColors:function(t,r,e){return[t[0]*(1-e)+r[0]*e,t[1]*(1-e)+r[1]*e,t[2]*(1-e)+r[2]*e,t[3]*(1-e)+r[3]*e]},distance:function(t,r,e,n){var a=e-t,o=n-r;return Math.sqrt(a*a+o*o)},clamp:function(t,r,e){return Math.min(Math.max(t,r),e)},wrap:function(t,r,e){var n=e-r;return(n+(t-r)%n)%n+r},mirroredWrap:function(t,r,e){var n=t-r,a=2*(e-r);return(n=(a+n%a)%a)>e-r?a-n+r:n+r},deg2rad:function(t){return t*Math.PI/180},hashRNG:function(t,r,e){var n=((t=0==Math.abs(t%2147483648)?1:t)*(r+1)*777^t*(e+1)*123)%2147483647;return n=61^n^n>>16,n+=n<<3,n^=n>>4,n*=668265261,n^=n>>15,n/=2147483647},cellNoiseBase:function(t,r,e,n,a){var o,i,s,u,c,l,p,h,f,m,g,v=1/0;n=Math.abs(n);for(var d=-2;d<=2;d++)for(var T=-2;T<=2;T++)o=Math.ceil(t/n)+d,i=Math.ceil(r/n)+T,s=TG.Utils.hashRNG(e,o,i),u=TG.Utils.hashRNG(2*e,o,i),c=a>0?1+TG.Utils.hashRNG(3*e,o,i)*a:1,l=(s+o)*n,p=(u+i)*n,(m=((h=Math.abs(l-t))*h+(f=Math.abs(p-r))*f)*c)<v&&(v=m,g=s);return{dist:Math.sqrt(v),value:g}}};